mutation CreateMovieList @auth(level: USER) {
  movieList_insert(data: {
    name: "My New List",
    description: "A list of my favorite movies",
    isPublic: false,
    userId_expr: "auth.uid"
  })
}

query GetPublicMovieLists @auth(level: PUBLIC) {
  movieLists(where: {isPublic: {eq: true}}) {
    id
    name
    description
    user {
      displayName
    }
  }
}

mutation AddMovieToList($movieListId: UUID!, $movieId: UUID!, $position: Int!) @auth(level: USER) {
  movieListEntry_insert(data: {
    movieListId: $movieListId,
    movieId: $movieId,
    position: $position
  })
}

query GetMoviesInList($movieListId: UUID!) @auth(level: USER) {
  movieList(id: $movieListId) {
    movieListEntries_on_movieList {
      movie {
        id
        title
        year
      }
      position
      note
    }
  }
}